hydra:
  run:
    dir: ${output_dir}
  output_subdir: ${output_dir}/code/hydra           # Store hydra's config breakdown here for debugging
  searchpath:                                       # Only <exp_dir> in these paths are discoverable
    - pkg://nuplan.planning.script.config.common
    - pkg://nuplan.planning.script.experiments      # Put experiments configs in script/experiments/<exp_dir>
    - config/training
    - config/model
    
defaults:
  - default_experiment
  # - default_common

  # Trainer and callbacks
  - lightning: default_lightning
  - callbacks: default_callbacks

  - model: pdm_open_model
  - worker: ray_distributed

  - scenario_builder: nuplan_mini
  - scenario_filter: all_scenarios



  # Optimizer settings
  - optimizer: adam  # [adam, adamw] supported optimizers
  - lr_scheduler: multistep_lr
#  - warm_up_lr_scheduler: null  # [linear_warm_up, constant_warm_up] supported warm up lr schedulers

  # Data Loading
  - data_loader: default_data_loader
  - splitter: nuplan

  # Objectives and metrics
  - objective: l1_objective
  - training_metric:
      - avg_displacement_error
      - avg_heading_error
      - final_displacement_error
      - final_heading_error
#  - data_augmentation: null
#  - data_augmentation_scheduler: null  # [default_augmentation_schedulers, stepwise_augmentation_probability_scheduler, stepwise_noise_parameter_scheduler] supported data augmentation schedulers
  - scenario_type_weights: default_scenario_type_weights

lr_scheduler:
  milestones: [50,75]  # 学习率衰减的epoch里程碑
  gamma: 0.1                  # 学习率衰减因子


experiment_name: 'training'
objective_aggregate_mode: mean # How to aggregate multiple objectives, can be 'mean', 'max', 'sum'

# # Cache parameters
# cache:
#   cache_path: ${oc.env:NUPLAN_EXP_ROOT}/cache         # Local/remote path to store all preprocessed artifacts from the data pipeline
#   use_cache_without_dataset: false                    # Load all existing features from a local/remote cache without loading the dataset
#   force_feature_computation: false                    # Recompute features even if a cache exists
#   cleanup_cache: false                                # Cleanup cached data in the cache_path, this ensures that new data are generated if the same cache_path is passed

# # Mandatory parameters
py_func: train                                          # Function to be run inside main (can be "train", "test", "cache")
job_name: pdm_open_model

cache:
  cache_path: exp/cache
  cleanup_cache: false
  force_feature_computation: false
  use_cache_without_dataset: false

verbose: false
